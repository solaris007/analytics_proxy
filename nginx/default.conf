# web service1 config.
server {
    listen 8080;
    listen 4443 ssl http2;
    server_name analytics-proxy.test;

    resolver 127.0.0.11 ipv6=off;

    ssl_certificate /etc/ssl/certs/nginx/analytics-proxy.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/analytics-proxy.key;
    include /etc/nginx/includes/ssl.conf;

    set $ga "www.google-analytics.com";

    # e.g. https://www.googletagmanager.com/gtag/js?id=G-SOMEID
    location = /gtag/js {
        proxy_set_header Accept-Encoding "";
        sub_filter $ga $server_name;
        sub_filter_types *;
        sub_filter_once off;

        proxy_pass https://www.googletagmanager.com$uri$is_args$args;
        break;
    }

    # e.g. https://www.googletagmanager.com/gtm.js?id=GTM-SOMEID
    location = /gtm.js {
        proxy_set_header Accept-Encoding "";
        sub_filter $ga $server_name;
        sub_filter_types *;
        sub_filter_once off;

        proxy_pass https://www.googletagmanager.com$uri$is_args$args;
        break;
    }

    location = /analytics.js {
        proxy_set_header Accept-Encoding "";
        sub_filter $ga $server_name;
        sub_filter '"/r/collect' '"/r/c';
        sub_filter '"/j/collect' '"/j/c';
        sub_filter '"/collect' '"/c';
        sub_filter_types *;
        sub_filter_once off;

        proxy_pass https://$ga/analytics.js;
        break;
    }

    location / {
        if ($uri ~ /r/c) {
            proxy_pass https://$ga/r/collect$is_args$args&uip=$remote_addr;
            break;
        }
        if ($uri ~ /g/c) {
            proxy_pass https://$ga/j/collect$is_args$args&uip=$remote_addr;
            break;
        }
        if ($uri ~ /j/c) {
            proxy_pass https://$ga/j/collect$is_args$args&uip=$remote_addr;
            break;
        }
        if ($uri ~ /c) {
            proxy_pass https://$ga/collect$is_args$args&uip=$remote_addr;
            break;
        }

        proxy_pass https://$ga$uri$is_args$args&uip=$remote_addr;
    }

    access_log on;
    error_log /var/log/nginx/error.log debug;
}

# Default
server {
    listen 8080 default_server;
    listen 4443 ssl http2 default_server;

    ssl_certificate /etc/ssl/certs/nginx/analytics-proxy.crt;
    ssl_certificate_key /etc/ssl/certs/nginx/analytics-proxy.key;
    include /etc/nginx/includes/ssl.conf;

    server_name _;
    root /var/www/html;

    charset UTF-8;

    error_page 404 /backend-not-found.html;
    location = /backend-not-found.html {
        allow all;
    }
    location / {
        return 404;
    }

    access_log on;
    log_not_found on;
    error_log /var/log/nginx/error.log debug;
}
